---
- name: create src directory
  file: path={{ src_dir }}/supervisor.local state=directory owner=root group=root

- name: copy resources to the src directory
  copy: src=common/files/get-pip.py dest={{ src_dir }}/supervisor.local owner=root group=root

- name: install pip
  command: python {{ src_dir }}/supervisor.local/get-pip.py creates=/usr/bin/pip

- name: install boto v2.24.0
  pip: name=boto version='2.24.0'

- name: get datetime
  debug: msg={{ lookup('pipe', 'date +%Y%m%d%H%M%S') }}
  register: datetime

- name: create mysql_backup directory into userhome
  file: state=directory path=~{{ ansible_ssh_user }}/mysql_backup
        owner={{ ansible_ssh_user }} group={{ ansible_ssh_user }}

- name: dump data into the mysql_backup directory
  mysql_db: name={{ mysql_vars['database'] }} state=dump
            target=~{{ ansible_ssh_user }}/mysql_backup/{{ mysql_vars['database'] }}-{{ datetime.msg }}.sql.gz

- name: chown the backup file to the login user
  file: path=~{{ ansible_ssh_user }}/mysql_backup/{{ mysql_vars['database'] }}-{{ datetime.msg }}.sql.gz
        owner={{ ansible_ssh_user }} group={{ ansible_ssh_user }}

- name: create the s3 bucket
  s3_with_nifty: access_key={{ s3_access_key }} secret_key={{ s3_secret_key }}
                 bucket={{ s3_backet }} s3_url={{ s3_url }} mode=create

- name: put the sql object to the s3 bucket
  s3_with_nifty: access_key={{ s3_access_key }} secret_key={{ s3_secret_key }}
                 bucket={{ s3_backet }} s3_url={{ s3_url }} mode=put
                 src=~{{ ansible_ssh_user }}/mysql_backup/{{ mysql_vars['database'] }}-{{ datetime.msg }}.sql.gz
                 object=c4sa_mysql_backup/{{ mysql_vars['database'] }}-{{ datetime.msg }}.sql.gz
